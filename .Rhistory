scale_x_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300)) +
theme(legend.position = "none") +
labs(x = "USD per person", y = "",
title = "Boxplots of USD transfer values per person",
subtitle = "Thick line in each box is the mean; ")
fsc %>% filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
ggplot(aes(y = activity_red, x = usd_per_person, colour = activity_red)) +
geom_jitter(alpha = .1, aes(size = beneficiaries)) +
geom_boxplot(alpha = .8) +
scale_x_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300)) +
theme(legend.position = "none") +
labs(x = "USD per person", y = "",
title = "Boxplots of USD transfer values per person",
subtitle = "Thick line in each box is the mean; points are individual distributions")
fsc %>% filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
ggplot(aes(y = activity_red, x = usd_per_person, colour = activity_red)) +
geom_jitter(alpha = .1, aes(size = beneficiaries)) +
geom_boxplot(alpha = .8) +
scale_x_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300)) +
theme(legend.position = "none") +
labs(x = "USD per person", y = "",
title = "Boxplots of USD transfer values per person",
subtitle = "Thick line in each box is the mean;\n Points are individual distributions, size of points reflect beneficiaries")
fsc %>% filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
ggplot(aes(y = activity_red, x = usd_per_person, colour = activity_red)) +
geom_jitter(alpha = .1, aes(size = beneficiaries)) +
geom_boxplot(alpha = .8) +
scale_x_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300)) +
theme(legend.position = "none") +
labs(x = "USD per person", y = "",
title = "Boxplots of USD transfer values per person",
subtitle = "Thick line in each box is the mean;\n Points are individual distributions, sizes of points reflect beneficiaries")
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_jitter(alpha = 0.4, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 10)) +
scale_x_continuous(breaks = seq(0, 90, by = 10)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 10)) +
scale_x_continuous(breaks = seq(0, 90, by = 10)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
money_scatter <- fsc %>%
filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
group_by(state, township, location, org_code, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd),
rounds = n_distinct(date)) %>%
mutate(per_person = round(total_value_usd / beneficiaries, digits = 2)) %>%
filter(total_value_usd > 0) %>%
ggplot(aes(x = beneficiaries, y = per_person, colour = activity_red,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
"rounds: ", rounds, "\n",
township, ", ", state))) +
geom_jitter(aes(size = beneficiaries), alpha = .5) +
scale_y_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300), labels = dollar_format(accuracy = 1)) +
scale_x_continuous(trans = "log10", labels = comma) +
scale_size_continuous(guide = "none") +
labs(x = "Beneficiary frequencies",
y = "USD transfer value per person",
title = "Average USD transfer value per person",
subtitle = "By organisation, location and activity",
colour = "") +
theme(legend.text = element_text(size = 5)) +
guides(colour = guide_legend(override.aes = list(size = 1, alpha = 1)))
ggplotly(money_scatter, tooltip = c("text")) %>%
layout(title = list(text = paste0("Average USD transfer value per person",
"<br>",
"<sup>",
"By organisation, location and activity; double-click on legend to select","</sup>")))
money_scatter <- fsc %>%
filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
group_by(state, township, location, org_code, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd),
rounds = n_distinct(date)) %>%
mutate(per_person = round(total_value_usd / beneficiaries, digits = 2)) %>%
filter(total_value_usd > 0) %>%
ggplot(aes(x = beneficiaries, y = per_person, colour = activity_red,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
"rounds: ", rounds, "\n",
township, ", ", state))) +
geom_jitter(aes(size = beneficiaries), alpha = .5) +
scale_y_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300), labels = dollar_format(accuracy = 1)) +
scale_x_continuous(trans = "log10", labels = comma, breaks = c(0, 10, 100, 1000, 10000, 100000, 300000)) +
scale_size_continuous(guide = "none") +
labs(x = "Beneficiary frequencies",
y = "USD transfer value per person",
title = "Average USD transfer value per person",
subtitle = "By organisation, location and activity",
colour = "") +
theme(legend.text = element_text(size = 5)) +
guides(colour = guide_legend(override.aes = list(size = 1, alpha = 1)))
ggplotly(money_scatter, tooltip = c("text")) %>%
layout(title = list(text = paste0("Average USD transfer value per person",
"<br>",
"<sup>",
"By organisation, location and activity; double-click on legend to select","</sup>")))
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>%
ggplot(aes(x = date, y = cum_ben, colour = activity_red)) +
geom_line(size = 0.7) +
geom_vline(colour = "grey50", lty = 2, xintercept = as.numeric(as.Date("2022-01-01"))) +
geom_vline(colour = "grey50", lty = 2, xintercept = as.numeric(as.Date("2021-06-01"))) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(labels = comma) +
facet_wrap(~ activity_red, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 5)) + # see if this works when you knit, then do it for the other plots
labs(x = "Month",
y = "Cumulative beneficiaries",
title = "Monthly progress by activity, 2021",
subtitle = "Figures are in cumulative unique beneficiaries reached") +
theme(plot.title = element_text(size = 12))
fsc %>%
mutate(delivery_modality = case_when(str_detect(delivery_modality, "Hybrid") ~ "Hybrid",
str_detect(delivery_modality, "Service") ~ "Service delivery",
TRUE ~ delivery_modality)) %>%
group_by(activity_red, delivery_modality) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = delivery_modality, y = beneficiaries, fill = activity_red)) +
geom_col() +
scale_fill_discrete(guide = "none") +
scale_y_continuous(labels = comma) +
facet_wrap(~ activity_red, scales = "free_y") +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust = 0.8))
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date)
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(activity_red)
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(activity_red)
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(activity_red = recode(activity_red, "food_cash for work_assets" = "food/cash for work/assets")) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(activity_red)
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(activity_red = recode(activity_red,
"food/cash for work/assets" = "food_cash for work_assets"
"provision of crop, vegetable and seed kits" = "crop, vegetable and seed kits",
fsc %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
group_by(date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(activity_red = recode(activity_red,
"food/cash for work/assets" = "food_cash for work_assets",
"provision of crop, vegetable and seed kits" = "crop, vegetable and seed kits",
"provision of livestock kits" = "livestock kits",
"income-generating activities and small grants" = "IGA and small grants",
"provision of kitchen garden kits" = "crop, vegetable and seed kits"))) %>%
group_by(activity_red) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
arrange(activity_red) %>%
mutate(activity_red = str_replace_all(activity_red, "provision of ", "")) %>%
ggplot(aes(x = date, y = cum_ben, colour = activity_red)) +
geom_line(size = 0.7) +
geom_vline(colour = "grey50", lty = 2, xintercept = as.numeric(as.Date("2022-01-01"))) +
geom_vline(colour = "grey50", lty = 2, xintercept = as.numeric(as.Date("2021-06-01"))) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(labels = comma) +
facet_wrap(~ activity_red, scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 5)) + # see if this works when you knit, then do it for the other plots
labs(x = "Month",
y = "Cumulative beneficiaries",
title = "Monthly progress by activity, 2021",
subtitle = "Figures are in cumulative unique beneficiaries reached") +
theme(plot.title = element_text(size = 12))
fsc_2021 <- read_csv("fsc5w_2021.csv") %>%
mutate(activity_new =
case_when(str_detect(activity_description, "Local Chicken support") ~
"provision of livestock kits",
activity == "Cash for Work / Food for Assets" ~
"food/cash for work/assets",
str_detect(activity_description, "home|Home") &
!str_detect(activity_description, "training|Training|Training,") ~
"provision of kitchen garden kits",
activity == "Provide crops & vegetables kits" &
str_detect(activity_description, "pumps|till|drum|Tiller|Drum") ~
"provision of community infrastructure and equipment",
activity == "Provide crops & vegetables kits" ~
"provision of crop, vegetable and seed kits",
activity == "Provide fishery kits" ~
"provision of fishery kits",
activity == "Provide livestock kits" ~
"provision of livestock kits",
activity %in% c("Provide monthly cash-based transfers", "Provide monthly food baskets") &
str_detect(activity_description, "Lifesaving|lifesaving|acute|Acute") ~
"food distributions (in kind/voucher/cash), severe",
# what to do about MVC, malnourished children and PLW?
activity %in% c("Provide monthly cash-based transfers", "Provide monthly food baskets")  ~
"food distributions (in kind/voucher/cash), moderate",
activity == "Provide support for income generation" &
!str_detect(activity_description, "agriculture input|farming") ~
"income-generating activities and small grants",
activity  == "Provide support for income generation"  ~
"income-generating activities and small grants",
activity == "Provide technical training" & str_detect(activity_description,
"farm|Farm|FFS|pesticide|ferti|agri|Agri|gardening|Seed|seed|SSA") ~
"FFS and farmer training",
activity == "Provide technical training" ~ "vocational training",
activity_description %in% c("Provide Voucher Cards to buy agriculture inputs for their agricultural works",
"Cash for farming (Livestock and Agri)") ~
"provision of crop, vegetable and seed kits",
TRUE ~ NA_character_)) %>%
mutate(activity_red = case_when(activity_new %in% c("food distributions (in kind/voucher/cash), moderate",
"food distributions (in kind/voucher/cash), severe") ~
"food distribution",
activity_new %in% c("multi-purpose cash transfer (MPC), moderate",
"multi-purpose cash transfer (MPC), severe") ~
"multi-purpose cash transfer",
activity == "livelihoods vocational training" ~ "vocational training",
activity == "food/cash for work/assets" ~ "food_cash for work_assets",
activity == "income-generating activities and small grants" ~ "IGA and small grants",
TRUE ~ activity_new)) %>%
mutate(strat_obj = case_when(activity_red %in% c("food distribution", "multi-purpose cash transfer") &
beneficiary_type == "Internally Displaced" ~
"so_1",
activity_red %in% c("food distribution", "multi-purpose cash transfer") &
beneficiary_type != "Internally Displaced" ~
"so_2",
TRUE ~ "so_3")) %>%
mutate(activity_red = recode(activity_red,
"food/cash for work/assets" = "food_cash for work_assets",
"provision of crop, vegetable and seed kits" = "crop, vegetable and seed kits",
"provision of livestock kits" = "livestock kits",
"income-generating activities and small grants" = "IGA and small grants",
"provision of kitchen garden kits" = "crop, vegetable and seed kits"),
activity_red = str_remove_all(activity_new, "provision of "))
fsc_2021 <- read_csv("fsc5w_2021.csv") %>%
mutate(activity_new =
case_when(str_detect(activity_description, "Local Chicken support") ~
"provision of livestock kits",
activity == "Cash for Work / Food for Assets" ~
"food/cash for work/assets",
str_detect(activity_description, "home|Home") &
!str_detect(activity_description, "training|Training|Training,") ~
"provision of kitchen garden kits",
activity == "Provide crops & vegetables kits" &
str_detect(activity_description, "pumps|till|drum|Tiller|Drum") ~
"provision of community infrastructure and equipment",
activity == "Provide crops & vegetables kits" ~
"provision of crop, vegetable and seed kits",
activity == "Provide fishery kits" ~
"provision of fishery kits",
activity == "Provide livestock kits" ~
"provision of livestock kits",
activity %in% c("Provide monthly cash-based transfers", "Provide monthly food baskets") &
str_detect(activity_description, "Lifesaving|lifesaving|acute|Acute") ~
"food distributions (in kind/voucher/cash), severe",
# what to do about MVC, malnourished children and PLW?
activity %in% c("Provide monthly cash-based transfers", "Provide monthly food baskets")  ~
"food distributions (in kind/voucher/cash), moderate",
activity == "Provide support for income generation" &
!str_detect(activity_description, "agriculture input|farming") ~
"income-generating activities and small grants",
activity  == "Provide support for income generation"  ~
"income-generating activities and small grants",
activity == "Provide technical training" & str_detect(activity_description,
"farm|Farm|FFS|pesticide|ferti|agri|Agri|gardening|Seed|seed|SSA") ~
"FFS and farmer training",
activity == "Provide technical training" ~ "vocational training",
activity_description %in% c("Provide Voucher Cards to buy agriculture inputs for their agricultural works",
"Cash for farming (Livestock and Agri)") ~
"provision of crop, vegetable and seed kits",
TRUE ~ NA_character_)) %>%
mutate(activity_red = case_when(activity_new %in% c("food distributions (in kind/voucher/cash), moderate",
"food distributions (in kind/voucher/cash), severe") ~
"food distribution",
activity_new %in% c("multi-purpose cash transfer (MPC), moderate",
"multi-purpose cash transfer (MPC), severe") ~
"multi-purpose cash transfer",
activity == "livelihoods vocational training" ~ "vocational training",
activity == "food/cash for work/assets" ~ "food_cash for work_assets",
activity == "income-generating activities and small grants" ~ "IGA and small grants",
TRUE ~ activity_new)) %>%
mutate(strat_obj = case_when(activity_red %in% c("food distribution", "multi-purpose cash transfer") &
beneficiary_type == "Internally Displaced" ~
"so_1",
activity_red %in% c("food distribution", "multi-purpose cash transfer") &
beneficiary_type != "Internally Displaced" ~
"so_2",
TRUE ~ "so_3")) %>%
mutate(activity_red = recode(activity_red,
"food/cash for work/assets" = "food_cash for work_assets",
"provision of crop, vegetable and seed kits" = "crop, vegetable and seed kits",
"provision of livestock kits" = "livestock kits",
"income-generating activities and small grants" = "IGA and small grants"),
activity_red = str_remove_all(activity_new, "provision of "))
fsc %>%
filter(!is.ma(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(org_code) %>%
mutate(pc = beneficiaries / sum(beneficiaries))
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(org_code) %>%
mutate(pc = beneficiaries / sum(beneficiaries)) %>%
ggplot(aes(x = pc, y = delivery_modality, colour = delivery_modality)) +
geom_point()
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(org_code) %>%
mutate(pc = beneficiaries / sum(beneficiaries)) %>%
ggplot(aes(x = pc, y = delivery_modality, colour = delivery_modality)) +
geom_jitter()
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(org_code) %>%
summarise(beneficiaries = sum(beneficiaries),
modalities = n()) %>%
mutate(pc = beneficiaries / sum(beneficiaries)) %>%
ggplot(aes(x = pc, y = delivery_modality, colour = delivery_modality)) +
geom_jitter()
fsc %>%
filter(!is.na(delivery_modality)) %>%
group_by(org_code, delivery_modality) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(pc = beneficiaries / sum(beneficiaries)) %>%
ggplot(aes(x = pc, y = delivery_modality, colour = delivery_modality)) +
geom_jitter()
fsc %>%
filter(str_detect(activity, "food distribution")) %>%
group_by(activity) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd)) %>%
mutate(per_person = total_value_usd / beneficiaries)
fsc %>%
filter(str_detect(activity, "food distribution") & !is.na(total_value_usd)) %>%
group_by(activity) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd)) %>%
mutate(per_person = total_value_usd / beneficiaries)
fsc %>%
filter(activity == "food distributions (in kind/voucher/cash), moderate" & !is.na(total_value_usd))
fsc %>%
filter(activity == "food distributions (in kind/voucher/cash), moderate" & !is.na(total_value_usd)) %>% pull(activity_description)
fsc %>%
filter(activity == "food distributions (in kind/voucher/cash), moderate" & !is.na(total_value_usd)) %>% pull(evidence)
fsc %>%
filter(activity == "food distributions (in kind/voucher/cash), severe" & !is.na(total_value_usd)) %>% pull(evidence)
fsc %>%
filter(str_detect(activity, "food distribution")) %>%
mutate(has_evidence = ifelse(is.na(evidence), 0, 1)) %>%
group_by(activity, has_evidence)
fsc %>%
filter(str_detect(activity, "food distribution")) %>%
mutate(has_evidence = ifelse(is.na(evidence), 0, 1)) %>%
group_by(activity, has_evidence) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
filter(str_detect(activity, "food distribution")) %>%
mutate(has_evidence = ifelse(is.na(evidence), "no", "yes")) %>%
group_by(activity, has_evidence) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
filter(str_detect(activity, "food distribution")) %>%
mutate(has_evidence = ifelse(is.na(evidence), "no", "yes")) %>%
group_by(activity, has_evidence) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(activity) %>%
mutate(pc_of_beneficiaries = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc %>%
filter(str_detect(activity, "moderate|severe")) %>%
mutate(has_evidence = ifelse(is.na(evidence), "no", "yes")) %>%
group_by(activity, has_evidence) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
group_by(activity) %>%
mutate(pc_of_beneficiaries = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
fsc %>%
filter(activity == "multi-purpose cash transfer (MPC), severe" & !is.na(total_value_usd)) %>%
sample_n(10) %>%
pull(evidence)
fsc %>%
filter(activity == "multi-purpose cash transfer (MPC), severe" & !is.na(total_value_usd)) %>%
group_by(evidence) %>%
summarise(beneficiaries = sum(beneficiaries))
fsc %>%
group_by(evidence) %>%
summarise(beneficiaries = new_beenficiaries)
fsc %>%
group_by(evidence) %>%
summarise(beneficiaries = new_beneficiaries)
fsc %>%
group_by(evidence) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
mutate(evidence = ifelse(str_detect(evidence, "food consumption score", "food consumption score", evidence))) %>%
group_by(evidence) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
mutate(evidence = ifelse(str_detect(evidence, "food consumption score"), "food consumption score", evidence)) %>%
group_by(evidence) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>%
mutate(evidence = ifelse(str_detect(evidence, "food consumption score"), "food consumption score", evidence)) %>%
group_by(evidence) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(pc = beneficiaries / sum(beneficiaries))
fsc %>%
mutate(evidence = ifelse(str_detect(evidence, "food consumption score"), "food consumption score", evidence)) %>%
group_by(evidence) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
