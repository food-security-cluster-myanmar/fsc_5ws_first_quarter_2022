scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd, fill = disagg)) +
geom_density(position = "stack", adjust = 0.5) +
scale_fill_manual(values = c("#00BFC4", "#00BA38", "#B79F00", "#F8766D", "#619CFF", "#F564E3")) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd, fill = disagg)) +
geom_density(position = "stack", adjust = 0.5) +
scale_fill_manual(values = c("#00BFC4", "#00BA38", "#B79F00", "#F8766D", "#619CFF", "#F564E3")) +
scale_x_continuous(labels = percent_format(accuracy = 1), trans = "log10") +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd, fill = disagg)) +
geom_density(position = "stack", adjust = 0.5) +
scale_fill_manual(values = c("#00BFC4", "#00BA38", "#B79F00", "#F8766D", "#619CFF", "#F564E3")) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd, fill = disagg)) +
geom_density(position = "stack", adjust = 0.5) +
scale_fill_manual(values = c("#00BFC4", "#00BA38", "#B79F00", "#F8766D", "#619CFF", "#F564E3")) +
scale_x_log10(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd, fill = disagg)) +
geom_density(position = "stack", adjust = 0.5) +
scale_fill_manual(values = c("#00BFC4", "#00BA38", "#B79F00", "#F8766D", "#619CFF", "#F564E3")) +
scale_x_continuous(labels = percent_format(accuracy = 1), trans = "log2") +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd, fill = disagg)) +
geom_density(position = "stack", adjust = 0.5) +
scale_fill_manual(values = c("#00BFC4", "#00BA38", "#B79F00", "#F8766D", "#619CFF", "#F564E3")) +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Density plot of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the closer the value to the group mean",
fill = "") +
theme(legend.position = c(0.9, 0.75))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(x = sd) +
geom_histogram()
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd)) +
geom_histogram()
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd)) +
geom_histogram() +
scale_x_log10()
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd)) +
geom_histogram()
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
ggplot(aes(x = sd)) +
geom_histogram() +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Histogram of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the more likely to be copy/paste")
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
group_by(cat) %>%
summarise(ben = sum(ben_sub))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
filter(!is.na(cat)) %>%
group_by(cat) %>%
summarise(ben = sum(ben_sub))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
filter(!is.na(cat)) %>%
group_by(cat) %>%
summarise(ben = sum(ben_sub)) %>%
mutate(pc = ben / sum(ben))
fsc_disagg %>%
filte(new_beneficiaries > 0) %>%
group_by(same_as_census) %>%
summarise(ben = sum(ben_sub, na.rm = TRUE))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
group_by(same_as_census) %>%
summarise(ben = sum(ben_sub, na.rm = TRUE))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
group_by(same_as_census) %>%
summarise(ben = sum(ben_sub, na.rm = TRUE)) %>%
mutate(pc = ben / sum(ben))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake"))
fsc_disagg
fsc_disagg %>%
filter(new_beneficiaries > 0)
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, location, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
filter(!is.na(cat)) %>%
group_by(cat) %>%
summarise(ben = sum(ben_sub)) %>%
mutate(pc = ben / sum(ben))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
filter(!is.na(cat)) %>%
group_by(cat) %>%
summarise(ben = sum(ben_sub)) %>%
mutate(pc = ben / sum(ben))
round(fsc %>% group_by(org_code) %>% summarise(locations = n_distinct(location)) %>% {mean(.$locations)}, digits = 2)
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
filter(!is.na(cat)) %>%
group_by(cat) %>%
summarise(ben = sum(ben_sub)) %>%
mutate(pc = ben / sum(ben))
fsc_disagg %>%
filter(new_beneficiaries > 0) %>%
mutate(pc_disagg = ben_sub / beneficiaries) %>%
group_by(org_code, disagg) %>%
summarise(mean = mean(pc_disagg),
sd = sd(pc_disagg, na.rm = TRUE),
ben_sub = sum(ben_sub, na.rm = TRUE)) %>%
mutate(cat = ifelse(sd >= .05, "real", "fake")) %>%
filter(!is.na(cat)) %>%
# group_by(cat) %>%
# summarise(ben = sum(ben_sub)) %>%
# mutate(pc = ben / sum(ben))
ggplot(aes(x = sd)) +
geom_histogram() +
scale_x_continuous(labels = percent_format(accuracy = 1)) +
labs(x = "Percentage difference from group mean",
title = "Histogram of standard deviations across beneficiary disaggregations",
subtitle = "The lower the standard deviation, the more likely to be copy/paste")
fsc %>%
sum_ben2(strat_obj, humanitarian_or_development) %>%
ungroup() %>%
pivot_wider(names_from = humanitarian_or_development, values_from = beneficiaries, values_fill = 0) %>%
mutate(strat_obj = fct_relevel(strat_obj, levels = c("so_1", "so_2", "so_3")),
Total = Development + Humanitarian,
strat_obj = str_to_title(strat_obj)) %>%
adorn_totals("row") %>%
kable(caption = "2022 beneficiaries by strategic objective", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped", full_width = FALSE)
fsc %>%
sum_ben2(strat_obj, humanitarian_or_development) %>%
ungroup() %>%
pivot_wider(names_from = humanitarian_or_development, values_from = beneficiaries, values_fill = 0) %>%
mutate(strat_obj = fct_relevel(strat_obj, levels = c("so_1", "so_2", "so_3")),
Total = Development + Humanitarian,
strat_obj = str_to_upper(strat_obj)) %>%
adorn_totals("row") %>%
kable(caption = "2022 beneficiaries by strategic objective", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped", full_width = FALSE)
fsc %>%
filter(org_code %in% partner_top) %>%
select(date, org_code, beneficiaries = new_beneficiaries, location, admin3_pcode) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
filter(org_code %in% partner_top) %>%
select(date, org_code, beneficiaries, location, admin3_pcode)) %>%
group_by(location, admin3_pcode) %>%
slice(which.max(beneficiaries)) %>%
group_by(org_code) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
ggplot(aes(x = date, y = cum_ben)) +
geom_line(size = 0.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(labels = comma) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2021-06-01"))) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2022-01-01"))) +
facet_wrap(~ fct_rev(fct_reorder(org_code, cum_ben, max)), scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 3.5, angle = 60),
axis.text.y = element_text(size = 4),
strip.text = element_text(size = 4.5, face = "bold")) + # see if this works when you knit, then do it for the other plots
labs(x = "Month",
y = "Cumulative beneficiaries",
title = "Monthly progress of top 20 implementing partners, 2021-2022",
subtitle = "Figures show cumulative unique beneficiaries") +
theme(plot.title = element_text(size = 11))
partner_top <- fsc %>%
sum_ben(org_code) %>% arrange(desc(beneficiaries)) %>%  mutate(org_code = reorder(org_code, -beneficiaries)) %>% pull(org_code) %>% head(20)
fsc %>%
filter(org_code %in% partner_top) %>%
select(date, org_code, beneficiaries = new_beneficiaries, location, admin3_pcode) %>%
rbind(fsc_2021 %>%
filter(unique_beneficiaries == "Yes") %>%
filter(org_code %in% partner_top) %>%
select(date, org_code, beneficiaries, location, admin3_pcode)) %>%
group_by(location, admin3_pcode) %>%
slice(which.max(beneficiaries)) %>%
group_by(org_code) %>%
arrange(date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
ggplot(aes(x = date, y = cum_ben)) +
geom_line(size = 0.5) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_continuous(labels = comma) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2021-06-01"))) +
geom_vline(colour = "red", lty = 2, xintercept = as.numeric(as.Date("2022-01-01"))) +
facet_wrap(~ fct_rev(fct_reorder(org_code, cum_ben, max)), scales = "free_y") +
theme(legend.position = "none",
axis.text.x = element_text(size = 3.5, angle = 60),
axis.text.y = element_text(size = 4),
strip.text = element_text(size = 4.5, face = "bold")) + # see if this works when you knit, then do it for the other plots
labs(x = "Month",
y = "Cumulative beneficiaries",
title = "Monthly progress of top 20 implementing partners, 2021-2022",
subtitle = "Figures show cumulative unique beneficiaries") +
theme(plot.title = element_text(size = 11))
partner_scatter <- fsc %>%
group_by(org_code) %>%
summarise(states = n_distinct(state),
townships = n_distinct(admin3_pcode),
beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = townships,
text = paste0(org_code, "\n",
"states: ", states, "\n",
"townships: ", twonships, "\n",
"beneficiaries: ", beneficiaries))) +
geom_point(aes(size = beneficiaries), alpha = .7) +
scale_x_continuous(trans = "log", labels = comma, breaks = c(0, 100, 300, 1000, 3000, 10000, 100000, 300000)) +
scale_y_continuous(breaks = seq(0, 25, 5)) +
labs(x = "Number of beneficiaries",
y = "Number of townships",
title = "Plot of beneficiaries and townships reached, by implementing partner") +
theme(legend.position = "none")
ggplotly(partner_scatter, tooltip = c("text")) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Plot of beneficiaries and townships reached, by implementing partner",
"<br>",
"<sup>",
"mouse over for details",
"</sup>")))
partner_scatter <- fsc %>%
group_by(org_code) %>%
summarise(states = n_distinct(state),
townships = n_distinct(admin3_pcode),
beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = townships,
text = paste0(org_code, "\n",
"states: ", states, "\n",
"townships: ", townships, "\n",
"beneficiaries: ", beneficiaries))) +
geom_point(aes(size = beneficiaries), alpha = .7) +
scale_x_continuous(trans = "log", labels = comma, breaks = c(0, 100, 300, 1000, 3000, 10000, 100000, 300000)) +
scale_y_continuous(breaks = seq(0, 25, 5)) +
labs(x = "Number of beneficiaries",
y = "Number of townships",
title = "Plot of beneficiaries and townships reached, by implementing partner") +
theme(legend.position = "none")
ggplotly(partner_scatter, tooltip = c("text")) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Plot of beneficiaries and townships reached, by implementing partner",
"<br>",
"<sup>",
"mouse over for details",
"</sup>")))
partner_scatter <- fsc %>%
group_by(org_code) %>%
summarise(states = n_distinct(state),
townships = n_distinct(admin3_pcode),
beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = townships,
text = paste0(org_code, "\n",
"states: ", states, "\n",
"townships: ", townships, "\n",
"beneficiaries: ", comma(beneficiaries)))) +
geom_point(aes(size = beneficiaries), alpha = .7) +
scale_x_continuous(trans = "log", labels = comma, breaks = c(0, 100, 300, 1000, 3000, 10000, 100000, 300000)) +
scale_y_continuous(breaks = seq(0, 25, 5)) +
labs(x = "Number of beneficiaries",
y = "Number of townships",
title = "Plot of beneficiaries and townships reached, by implementing partner") +
theme(legend.position = "none")
ggplotly(partner_scatter, tooltip = c("text")) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Plot of beneficiaries and townships reached, by implementing partner",
"<br>",
"<sup>",
"mouse over for details",
"</sup>")))
partner_scatter <- fsc %>%
group_by(org_code) %>%
summarise(states = n_distinct(state),
townships = n_distinct(admin3_pcode),
beneficiaries = sum(new_beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = townships,
text = paste0(org_code, "\n",
"states: ", states, "\n",
"townships: ", townships, "\n",
"beneficiaries: ", comma(beneficiaries, accuracy = 1)))) +
geom_point(aes(size = beneficiaries), alpha = .7) +
scale_x_continuous(trans = "log", labels = comma, breaks = c(0, 100, 300, 1000, 3000, 10000, 100000, 300000)) +
scale_y_continuous(breaks = seq(0, 25, 5)) +
labs(x = "Number of beneficiaries",
y = "Number of townships",
title = "Plot of beneficiaries and townships reached, by implementing partner") +
theme(legend.position = "none")
ggplotly(partner_scatter, tooltip = c("text")) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Plot of beneficiaries and townships reached, by implementing partner",
"<br>",
"<sup>",
"mouse over for details",
"</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .5, size = .3) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.3, 10)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person by state",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text"), width = 820, height =  600) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"The red line is 50% of food MEB; double-click on legend to select","</sup>")),
legend = list(font = list(size = 5)))
ben_target <- fsc %>%
group_by(admin3_pcode_old) %>%
summarise(beneficiaries = sum(new_beneficiaries),
partners = n_distinct(org_code)) %>%
left_join(pin, by = c("admin3_pcode_old" = "admin3_pcode")) %>%
mutate(reached_pc = beneficiaries / fs_targeted,
reached_pc = ifelse(is.infinite(reached_pc), 1, reached_pc),
fs_targeted = ifelse(fs_targeted == 0 & beneficiaries > 0, 1, fs_targeted),
fs_targeted = round(fs_targeted, digits = 0)) %>%
arrange(desc(reached_pc)) %>%
select(state, township, fs_pin, fs_targeted, beneficiaries, reached_pc, partners) %>%
ggplot(aes(x = fs_targeted, y = beneficiaries, colour = partners,
text = paste0(township, ",", "\n",
state, ",", "\n",
"beneficiaries: ", comma(beneficiaries, accuracy = 1), "\n",
"target: ", comma(fs_targeted, accuracy = 1), "\n",
"% of target: ", percent(reached_pc, accuracy = 2), "\n",
"partners: ", partners))) +
geom_abline(intercept = 0, slope = 1, lty = 2, colour = "red") +
geom_point(aes(size = beneficiaries), alpha = 0.8) +
scale_size_continuous(guide = "none") +
scale_x_continuous(trans = "log10", labels = comma) +
scale_y_continuous(trans = "log10", labels = comma) +
scale_colour_viridis(direction = -1) +
labs(x = "Targeted population", y = "Beneficiaries",
title = "Beneficiaries reached vs targeted population by township, Q1 2022",
subtitle = "The red line is 100% of target") +
theme(legend.title = element_text(size = 7))
ggplotly(ben_target, tooltip = c("text"), width = 820) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Beneficiaries reached vs targeted population by township, Q1 2022",
"<br>",
"<sup>",
"The red line is 100% of target; size indicates number of beneficiaries","</sup>")),
legend = list(font = list(size = 7)))
ggplotly(ben_target, tooltip = c("text"), width = 820) %>%
config(displayModeBar = FALSE) %>%
layout(title = list(text = paste0("Beneficiaries reached vs targeted population by township, Q1 2022",
"<br>",
"<sup>",
"The red line is 100% of target; size indicates number of beneficiaries","</sup>")),
legend = list(font = list(size = 7)), colorbar = list(font = list(size = 7)))
