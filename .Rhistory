filter(!is.na(usd_per_hhd) & !is.na(new_beneficiaries)) %>%
filter(delivery_modality %in% c("CBT/CVA", "Hybrid (In-kind & CBT/CVA)")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(cumsum = cumsum(households))
fsc %>%
filter(!is.na(usd_per_hhd) & !is.na(new_beneficiaries)) %>%
filter(delivery_modality %in% c("CBT/CVA", "Hybrid (In-kind & CBT/CVA)")) %>%
group_by(usd_hhd_bin) %>%
summarise(households = sum(households)) %>%
mutate(cumsum = cumsum(households),
rolling_pc = cumsum / max(cumsum))
13.81 + 22.51 + 10.7
fsc %>%
group_by(org_code, activity_red) %>%
summarise(total_value_usd = sum(total_value_usd, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
households = sum(households, na.rm = TRUE)) %>%
mutate(per_person = round(total_value_usd / beneficiaries, digits = 2),
per_hhd = total_value_usd / households,
activity_red = str_remove_all(activity_red, "provision of ")) %>%
filter(total_value_usd > 0) %>%
ggplot(aes(x = beneficiaries, y = per_person, colour = activity_red)) +
geom_point() +
scale_y_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300)) +
scale_x_continuous(trans = "log10", labels = comma) +
facet_wrap(~activity_red, scales = "free")
fsc %>%
filter(!is.na(total_value_usd)) %>%
group_by(location, org_code, date, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_value_usd = sum(total_value_usd, na.rm = TRUE)) %>%
group_by(location, org_code, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd),
rounds = n()) %>%
group_by(org_code, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd),
rounds = round(mean(rounds), digits = 2))
partner_mean_usd <- function(tbl, name){
tbl %>%
filter(!is.na(new_beneficiaries) & !is.na(usd_per_hhd)) %>%
filter(delivery_modality %in% c("CBT/CVA", "Hybrid (In-kind & CBT/CVA)")) %>%
filter(activity_red == {{name}}) %>%
mutate(households = ifelse(activity_red == "food distribution",
beneficiaries,
households)) %>%
group_by(org_code) %>%
summarise(total_value_usd = sum(total_value_usd),
beneficiaries = sum(new_beneficiaries),
households = sum(households)) %>%
mutate(mean_usd = total_value_usd / households) %>%
arrange(desc(beneficiaries)) %>%
top_n(7) %>%
mutate(org_code = fct_reorder(org_code, beneficiaries)) %>%
ggplot(aes(x = mean_usd, y = org_code, fill = beneficiaries)) +
scale_x_continuous(labels = comma_format(accuracy = 1)) +
scale_fill_viridis(option = "mako", direction = -1, begin = 0.2,
labels = number_format(scale = 1 / 1000, suffix = "K", accuracy = 1)) +
geom_col() +
geom_text(aes(label = dollar(mean_usd)), size = 2, hjust = "inward") +
theme(axis.text.y = element_text(size = 8)) +
labs(x = "Average USD value of package per transfer",
y = "") +
theme(legend.title = element_text(size = 3.5),
legend.text = element_text(size = 3.5),
plot.title = element_text(size = 10, face = "bold"),
axis.title.x = element_text(size = 8))
}
fsc %>% partner_mean_usd("food distribution") +
labs(title = "Food distributions (per person)") +
fsc %>% partner_mean_usd("food_cash for work_assets") +
labs(title = "Food/cash for work/assets (per hhd)") +
fsc %>% partner_mean_usd("multi-purpose cash transfer") +
labs(title = "Multi-purpose cash transfer (per hhd)") +
fsc %>% partner_mean_usd("IGA and small grants") +
labs(title = "IGA and small grants (per hhd)") +
plot_annotation(title = "Cash transfer values of the top implementing partners",
subtitle = "Showing the top 10 partners")
partner_mean_usd <- function(tbl, name){
tbl %>%
filter(!is.na(new_beneficiaries) & !is.na(usd_per_hhd)) %>%
filter(delivery_modality %in% c("CBT/CVA", "Hybrid (In-kind & CBT/CVA)")) %>%
filter(activity_red == {{name}}) %>%
mutate(households = ifelse(activity_red == "food distribution",
beneficiaries,
households)) %>%
group_by(org_code) %>%
summarise(total_value_usd = sum(total_value_usd),
beneficiaries = sum(new_beneficiaries),
households = sum(households)) %>%
mutate(mean_usd = total_value_usd / households) %>%
arrange(desc(beneficiaries)) %>%
top_n(7) %>%
mutate(org_code = fct_reorder(org_code, beneficiaries)) %>%
ggplot(aes(x = mean_usd, y = org_code, fill = beneficiaries)) +
scale_x_continuous(labels = comma_format(accuracy = 1)) +
scale_fill_viridis(option = "mako", direction = -1, begin = 0.2,
labels = number_format(scale = 1 / 1000, suffix = "K", accuracy = 1)) +
geom_col() +
geom_text(aes(label = dollar(mean_usd)), size = 2, hjust = "inward") +
theme(axis.text.y = element_text(size = 8)) +
labs(x = "Average USD value of package per transfer",
y = "") +
theme(legend.title = element_text(size = 3.5),
legend.text = element_text(size = 3.5),
plot.title = element_text(size = 10),
axis.title.x = element_text(size = 8))
}
fsc %>% partner_mean_usd("food distribution") +
labs(title = "Food distributions (per person)") +
fsc %>% partner_mean_usd("food_cash for work_assets") +
labs(title = "Food/cash for work/assets (per hhd)") +
fsc %>% partner_mean_usd("multi-purpose cash transfer") +
labs(title = "Multi-purpose cash transfer (per hhd)") +
fsc %>% partner_mean_usd("IGA and small grants") +
labs(title = "IGA and small grants (per hhd)") +
plot_annotation(title = "Cash transfer values of the top implementing partners",
subtitle = "Showing the top 10 partners")
fsc %>% partner_mean_usd("food distribution") +
labs(title = "Food distributions (per person)") +
fsc %>% partner_mean_usd("food_cash for work_assets") +
labs(title = "Food/cash for work/assets (per hhd)") +
fsc %>% partner_mean_usd("multi-purpose cash transfer") +
labs(title = "Multi-purpose cash transfer (per hhd)") +
fsc %>% partner_mean_usd("IGA and small grants") +
labs(title = "IGA and small grants (per hhd)") +
plot_annotation(title = "Cash transfer values of the top implementing partners",
subtitle = "Showing the top partners by beneficiaries reached")
fsc %>% filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
ggplot(aes(y = activity_red, x = usd_per_person, colour = activity_red)) +
geom_jitter(alpha = .1, aes(size = beneficiaries)) +
geom_boxplot(alpha = .8) +
scale_x_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300)) +
theme(legend.position = "none") +
labs(x = "USD per person", y = "",
title = "Boxplots of USD transfer values per person",
subtitle = "Thick line in each box is the mean;\n Points are individual distributions, sizes of points reflect beneficiaries")
money_scatter <- fsc %>%
filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
group_by(state, township, location, org_code, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd),
rounds = n_distinct(date)) %>%
mutate(per_person = round(total_value_usd / beneficiaries, digits = 2)) %>%
filter(total_value_usd > 0) %>%
ggplot(aes(x = beneficiaries, y = per_person, colour = activity_red,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
"rounds: ", rounds, "\n",
township, ", ", state))) +
geom_jitter(aes(size = beneficiaries), alpha = .5) +
scale_y_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300), labels = dollar_format(accuracy = 1)) +
scale_x_continuous(trans = "log10", labels = comma, breaks = c(0, 10, 100, 1000, 10000, 100000, 300000)) +
scale_size_continuous(guide = "none") +
labs(x = "Beneficiary frequencies",
y = "USD transfer value per person",
title = "Average USD transfer value per person",
subtitle = "By organisation, location and activity",
colour = "") +
theme(legend.text = element_text(size = 5)) +
guides(colour = guide_legend(override.aes = list(size = 1, alpha = 1)))
ggplotly(money_scatter, tooltip = c("text")) %>%
layout(title = list(text = paste0("Average USD transfer value per person",
"<br>",
"<sup>",
"By organisation, location and activity; double-click on legend to select","</sup>")))
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 10)) +
scale_x_continuous(breaks = seq(0, 90, by = 10)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person",
size = "", colour = "")
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
cbt_bins <- fsc %>% filter(activity_red %in% c("food distribution") &
!is.na(usd_per_hhd) &
!is.na(new_beneficiaries)) %>%
count(usd_hhd_bin, wt = households) %>%
mutate(pc_of_total = round(n / sum(n) * 100, digits = 2))
fsc %>%
filter(activity_red %in% c("food distribution") &
!is.na(usd_per_hhd) &
!is.na(new_beneficiaries)) %>%
mutate(pc_meb = usd_per_hhd / 114.55) %>%
group_by(usd_hhd_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(usd_per_hhd, na.rm = TRUE), digits = 2),
households = round(sum(households))) %>%
mutate(pc_of_hhd = round(households / sum(households) * 100, digits = 2)) %>%
kable(caption = "Monthly cash-based transfer values by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 0.9, direction = -1)) %>%
footnote(general = "Only households reached through monthly cash-based transfers are included",
general_title = "")
food_bins <- fsc %>% filter(activity_red %in% c("food distribution") &
!is.na(usd_per_person) &
!is.na(new_beneficiaries)) %>%
count(usd_person_bin, wt = new_beneficiaries) %>%
mutate(pc_of_total = round(n / sum(n) * 100, digits = 2))
fsc %>%
filter(activity_red %in% c("food distribution") &
!is.na(usd_per_person) &
!is.na(new_beneficiaries)) %>%
mutate(pc_meb = usd_per_person / 114.55 / 5) %>%
group_by(usd_person_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(usd_per_hhd, na.rm = TRUE), digits = 2),
beneficiaries = round(sum(new_beneficiaries))) %>%
mutate(pc_of_hhd = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
kable(caption = "USD values of food distributions by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(cbt_bins$pc_of_total[1:11], end = 0.9, direction = -1)) %>%
footnote(general = "Only persons reached through CBT/CVA/hybrid modalities are included",
general_title = "")
food_bins <- fsc %>% filter(activity_red %in% c("food distribution") &
!is.na(usd_per_person) &
!is.na(new_beneficiaries)) %>%
count(usd_person_bin, wt = new_beneficiaries) %>%
mutate(pc_of_total = round(n / sum(n) * 100, digits = 2))
fsc %>%
filter(activity_red %in% c("food distribution") &
!is.na(usd_per_person) &
!is.na(new_beneficiaries)) %>%
mutate(pc_meb = usd_per_person / 114.55 / 5) %>%
group_by(usd_person_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(usd_per_person, na.rm = TRUE), digits = 2),
beneficiaries = round(sum(new_beneficiaries))) %>%
mutate(pc_of_hhd = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
kable(caption = "USD values of food distributions by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(food_bins$pc_of_total[1:11], end = 0.9, direction = -1)) %>%
footnote(general = "Only persons reached through CBT/CVA/hybrid modalities are included",
general_title = "")
fsc %>%
filter(activity_red %in% c("food distribution") &
!is.na(usd_per_person) &
!is.na(new_beneficiaries)) %>%
mutate(pc_meb = usd_per_person * 5 / 114.55) %>%
group_by(usd_person_bin) %>%
summarise(avg_pc_of_meb = round(median(pc_meb) * 100, digits = 2),
avg_usd_month = round(median(usd_per_person, na.rm = TRUE), digits = 2),
beneficiaries = round(sum(new_beneficiaries))) %>%
mutate(pc_of_hhd = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
kable(caption = "USD values of food distributions by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(food_bins$pc_of_total[1:11], end = 0.9, direction = -1)) %>%
footnote(general = "Only persons reached through CBT/CVA/hybrid modalities are included",
general_title = "")
fsc %>%
filter(activity_red %in% c("food distribution") &
!is.na(usd_per_person) &
!is.na(new_beneficiaries)) %>%
mutate(pc_meb = usd_per_person * 5 / 114.55) %>%
group_by(usd_person_bin) %>%
summarise(avg_pc_of_meb = round(mean(pc_meb) * 100, digits = 2),
avg_usd_month = round(mean(usd_per_person, na.rm = TRUE), digits = 2),
beneficiaries = round(sum(new_beneficiaries))) %>%
mutate(pc_of_hhd = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
kable(caption = "USD values of food distributions by percentage of MEB received", format.args = list(big.mark = ",")) %>%
kable_classic_2("striped") %>%
column_spec(5, color = "white", background = spec_color(food_bins$pc_of_total[1:11], end = 0.9, direction = -1)) %>%
footnote(general = "Only persons reached through CBT/CVA/hybrid modalities are included",
general_title = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
114.55 / 5
114.55 / 5 / 2
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .5)
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .5) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person by state",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"range of USD values per person; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .3, size = .5) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person by state",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"The red line is 50% of food MEB; double-click on legend to select","</sup>")))
?geom_vline
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .3, lwd = .5) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person by state",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"The red line is 50% of food MEB; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .3, size = .3) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person by state",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"The red line is 50% of food MEB; double-click on legend to select","</sup>")))
food_dist_range <- fsc %>%
filter(!is.na(usd_per_person)) %>%
filter(activity_red == "food distribution" & usd_per_person < 60) %>%
ggplot(aes(x = usd_per_person, y = state, colour = state,
text = paste0(org_code, "\n",
activity_red, "\n",
"ben. frequencies: ", comma(beneficiaries, accuracy = 1), "\n",
"USD per person: ", dollar(usd_per_person), "\n",
"total value: ", dollar(total_value_usd, accuracy = 1), "\n",
township, ", ", state))) +
geom_vline(xintercept = 11.455, lty = 2, colour = "red", alpha = .5, size = .3) +
geom_jitter(alpha = 0.3, aes(size = beneficiaries)) +
scale_colour_viridis_d() +
scale_size_continuous(range = c(0.5, 8)) +
scale_x_continuous(breaks = seq(0, 90, by = 10), labels = dollar_format(accuracy = 1)) +
labs(x = "USD value per person",
y = "",
title = "Food distribution: range of USD values per person by state",
size = "", colour = "")
ggplotly(food_dist_range, tooltip = c("text")) %>%
layout(title = list(text = paste0("Food distribution: range of USD values per person by state",
"<br>",
"<sup>",
"The red line is 50% of food MEB; double-click on legend to select","</sup>")))
filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)} / filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% sum(.$new_beneficiaries) * 100
filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}
filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)} / filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)} * 100
filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}
filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)} / filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)} * 100
(filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) / (filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) * 100
(filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)})
(filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) / (filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)})
(filter(fsc, usd_per_person > (114.55 / 5) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) / (filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) * 100
(filter(fsc, usd_per_person > (114.55 / 5 / 2) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) / (filter(fsc, !is.na(usd_per_person) & activity_red == "food distribution") %>% {sum(.$new_beneficiaries)}) * 100
fsc %>% filter(!is.na(total_value_usd) & activity_red != "livestock kits") %>%
ggplot(aes(y = activity_red, x = usd_per_person, colour = activity_red)) +
geom_jitter(alpha = .1, aes(size = beneficiaries)) +
geom_boxplot(alpha = .8) +
scale_x_continuous(trans = "log10", breaks = c(0, 1, 3, 10, 30, 100, 300),
labels = dollar_format(accuracy = 1)) +
theme(legend.position = "none") +
labs(x = "USD per person", y = "",
title = "Boxplots of USD transfer values per person",
subtitle = "Thick line in each box is the mean;\n Points are individual distributions, sizes of points reflect beneficiaries")
